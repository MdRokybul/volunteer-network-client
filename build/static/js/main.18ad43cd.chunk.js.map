{"version":3,"sources":["Components/Header/Header.js","Components/Events/Events.js","Components/Home/Home.js","Components/VolunteerRegister/VolunteerRegister.js","Components/Login/firebase.config.js","Components/Login/Login.js","Components/PrivateRoute/PrivateRoute.js","Components/IndividualEventList/IndividualEventList.js","Components/EventList/EventList.js","Components/AddEvent/AddEvent.js","Components/VolunteerList/VolunteerList.js","Components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Header","Container","Navbar","bg","expand","Brand","className","src","alt","Toggle","aria-controls","Collapse","id","Nav","to","Events","props","event","_id","title","description","date","useContext","EventContext","setEvent","Col","CardDeck","Card","style","marginBottom","onClick","Img","variant","Body","Title","Text","Footer","Date","toDateString","Home","useState","eventList","setEventList","console","log","useEffect","fetch","then","res","json","data","Row","map","VolunteerRegister","UserContext","loggedInUser","eventTitle","setEventTitle","MatchedItem","matchedItem","setMatchItem","startDate","setStartDate","fullName","email","volunteer","setVolunteer","amarData","find","edata","Form","Group","controlId","Control","type","placeholder","value","displayName","name","disabled","selected","onChange","newVolunteer","e","target","user","Button","method","body","JSON","stringify","headers","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","Login","setLoggedInUser","history","useHistory","from","useLocation","state","pathname","provider","GoogleAuthProvider","marginTop","signInWithPopup","result","replace","catch","error","PrivateRoute","children","rest","render","location","IndividualEventList","individualVolunteer","setSingleVolunteer","EventList","singleVolunteer","AddEvent","handleBlur","newEvent","as","Label","onBlur","rows","href","VolunteerList","volunteerList","Admin","adminPanel","setAdminPanel","Table","striped","bordered","hover","size","createContext","App","Provider","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.18ad43cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Container, Form, FormControl, Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand>\r\n                        <div className=\"logoStyle\">\r\n                        <img src=\"https://firebasestorage.googleapis.com/v0/b/volunteer-network-d8e29.appspot.com/o/logo.png?alt=media&token=a5f23b09-f552-42b6-9859-726bd7c02921\" alt=\"\"/>\r\n                        </div>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <div className=\"link-style\">\r\n                            <Link className=\"link-style\" to='/'>Home</Link>\r\n                            <Link className=\"link-style\" to='/donation'>Donation</Link>\r\n                            <Link className=\"link-style\" to='/eventList'>Events</Link>\r\n                            <Link className=\"link-style\" to='/blog'>Blog</Link>\r\n                            <Link className=\"link-style\" to=\"/volunteerRegistration\">Register</Link>\r\n                            <Link className=\"link-style\" to='/admin'>Admin</Link>\r\n                            </div>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useContext, useState } from 'react';\r\nimport { Card, CardDeck, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { EventContext } from '../../App';\r\n\r\nconst Events = (props) => {\r\n    // const { id, title } = props.singleData;\r\n    const {_id, title, description, date} = props.event;\r\n    const [event, setEvent] = useContext(EventContext)\r\n\r\n    const handleEventClick = (id) => {\r\n        setEvent(id);\r\n    }\r\n    \r\n    return (\r\n        <Col className=\"col-md-3\">\r\n            <CardDeck>\r\n                \r\n                    <Card style={{marginBottom: '30px'}} onClick={() => handleEventClick(_id)}>\r\n                    <Link to=\"/volunteerRegistration\">\r\n                        <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n                        <Card.Body>\r\n                            <Card.Title> {title} </Card.Title>\r\n                            <Card.Text>\r\n                                {description}\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\"> {(new Date(date).toDateString())} </small>\r\n                        </Card.Footer>\r\n                        </Link>\r\n                    </Card>\r\n                \r\n            </CardDeck>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default Events;","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardDeck, Col, Container, Row } from 'react-bootstrap';\r\nimport Events from '../Events/Events';\r\n\r\nconst Home = () => {\r\n    const [eventList, setEventList] = useState([]);\r\n    console.log(eventList)\r\n    useEffect(() => {\r\n        fetch('https://damp-beyond-64004.herokuapp.com/eventlist')\r\n        .then(res => res.json())\r\n        .then(data => setEventList(data))\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    {\r\n                        eventList.map(event => <Events event={event}></Events>)\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { EventContext, MatchedItem, UserContext } from '../../App';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './VolunteerRegister.css';\r\n\r\nconst VolunteerRegister = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    const [event, setEvent] = useContext(EventContext);\r\n\r\n    const [eventData, setEventData] = useState([]);\r\n\r\n    const [eventTitle, setEventTitle] = useState([]);\r\n\r\n    const [matchedItem, setMatchItem] = useContext(MatchedItem);\r\n    console.log(matchedItem)\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    const [volunteer, setVolunteer] = useState({\r\n        fullName: '',\r\n        email: '',\r\n        description: '',\r\n        title: '',\r\n        date: startDate\r\n    });\r\n    console.log(volunteer)\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://damp-beyond-64004.herokuapp.com/eventlist')\r\n            .then(res => res.json())\r\n            .then(data => setEventTitle(data))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const amarData = eventTitle.find(edata => edata._id === event);\r\n        setMatchItem(amarData);\r\n    }, [eventTitle]);\r\n\r\n    const handleBlur = (e) => {\r\n        if (e.target.name === 'description') {\r\n            const user = { ...loggedInUser };\r\n            const newVolunteer = { ...volunteer };\r\n            const title = matchedItem.title;\r\n            newVolunteer.fullName = user.displayName;\r\n            newVolunteer.email = user.email;\r\n            newVolunteer.description = e.target.value;\r\n            newVolunteer.title = title;\r\n            setVolunteer(newVolunteer);\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        const newVolunteer = { ...volunteer }\r\n        setStartDate(date)\r\n        newVolunteer.date = startDate;\r\n        setVolunteer(newVolunteer);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const newVolunteer = { ...volunteer }\r\n        fetch('https://damp-beyond-64004.herokuapp.com/addVolunteer', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newVolunteer),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"d-flex justify-content-center\">\r\n\r\n                <Col className=\"col-md-6\">\r\n                    <div className=\"register-style\">\r\n                        <Form>\r\n                            <h3>Register as a Volunteer</h3><br />\r\n                            <Form.Group controlId=\"formBasicFullName\">\r\n                                <Form.Control type=\"text\" placeholder=\"Enter full name\" value={loggedInUser.displayName} name=\"fullName\" disabled />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" value={loggedInUser.email} name=\"email\" disabled />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicDate\">\r\n                                <DatePicker className=\"date-style\" selected={startDate} onChange={handleDateChange} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicDescription\">\r\n                                <Form.Control onChange={handleBlur} type=\"text\" placeholder=\"Enter Description\" name=\"description\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicTitle\">\r\n                                {/* value={eventData.title} */}\r\n                                <Form.Control type=\"text\" name=\"event\" value={volunteer.title} disabled />\r\n\r\n                            </Form.Group>\r\n                            {\r\n                                volunteer.description !== '' ? <Link to=\"/eventList\">\r\n                                    <Button variant=\"primary\" className=\"register-btn-style\" onClick={handleSubmit}>Registration</Button>\r\n                                </Link> :\r\n                                    <Link to=\"/eventList\">\r\n                                        <Button variant=\"primary\" className=\"register-btn-style\" disabled>Registration</Button>\r\n                                    </Link>\r\n                            }\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default VolunteerRegister;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyBoR5iPvhCU6QCJJ7tHGnDjA7y3UbHg1zI\",\r\n    authDomain: \"volunteer-network-d8e29.firebaseapp.com\",\r\n    databaseURL: \"https://volunteer-network-d8e29.firebaseio.com\",\r\n    projectId: \"volunteer-network-d8e29\",\r\n    storageBucket: \"volunteer-network-d8e29.appspot.com\",\r\n    messagingSenderId: \"484523609767\",\r\n    appId: \"1:484523609767:web:9d95e75bd9e456d65e5582\"\r\n  };\r\n\r\n  export default firebaseConfig;","import React, { useContext, useState } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport './Login.css'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    \r\n\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const handleLogin = () => {\r\n        firebase.auth().signInWithPopup(provider).then(function (result) {\r\n            const user = result.user;\r\n            setLoggedInUser(user);\r\n            history.replace(from);\r\n        }).catch(function (error) {\r\n\r\n        });\r\n    }\r\n    return (\r\n        <Container style={{ marginTop: '100px' }}>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"login-container d-flex justify-content-center align-items-center\">\r\n                    <div className=\"text-center\">\r\n                        <h4>Login with</h4>\r\n                        <div onClick={handleLogin} className=\"google-style d-flex\">\r\n                            <img src=\"https://firebasestorage.googleapis.com/v0/b/volunteer-network-d8e29.appspot.com/o/google-logo-9824.png?alt=media&token=b739b85c-30f2-414e-b523-fb81e73fd37b\" alt=\"\" />\r\n                            <p>  Google </p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    return (\r\n        <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedInUser.email ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Card, CardDeck, Col } from 'react-bootstrap';\r\nimport { UserContext } from '../../App';\r\n\r\nconst IndividualEventList = (props) => {\r\n    const { _id, title, description } = props.individualVolunteer;\r\n\r\n    const deleteVolunteer = (id) => {\r\n        fetch('https://damp-beyond-64004.herokuapp.com/deleteVolunteer/'+id, {\r\n            method: 'DELETE',\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n\r\n    //testing function\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [singleVolunteer, setSingleVolunteer] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('https://damp-beyond-64004.herokuapp.com/volunteer?email=' + loggedInUser.email)\r\n            .then(res => res.json())\r\n            .then(data => setSingleVolunteer(data))\r\n    }, [])\r\n    return (\r\n        <Col className=\"col-md-6\">\r\n            <CardDeck>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n                    <Card.Body>\r\n                        <Card.Title> {title} </Card.Title>\r\n                        <Card.Text>\r\n                            {description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button onClick={() => deleteVolunteer(_id)}>Cancel</Button>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardDeck>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default IndividualEventList;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { UserContext } from '../../App';\r\nimport IndividualEventList from '../IndividualEventList/IndividualEventList';\r\n\r\nconst EventList = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [singleVolunteer, setSingleVolunteer] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('https://damp-beyond-64004.herokuapp.com/volunteer?email=' + loggedInUser.email)\r\n            .then(res => res.json())\r\n            .then(data => setSingleVolunteer(data))\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <h3>This is event list</h3>\r\n            </Row>\r\n            <Row>\r\n                {\r\n                    singleVolunteer.map(volunteer => <IndividualEventList individualVolunteer={volunteer}></IndividualEventList>)\r\n                }\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EventList;","import React, { useState } from 'react';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst AddEvent = () => {\r\n    const [event, setEvent] = useState({\r\n        title: '',\r\n        date: '',\r\n        description: ''\r\n    })\r\n    console.log(event)\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const handleDateChange = (date) => {\r\n        const newEvent = { ...event }\r\n        setStartDate(date)\r\n        newEvent.date = startDate;\r\n        setEvent(newEvent);\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (e.target.name === 'title') {\r\n            const newEvent = { ...event }\r\n            newEvent.title = e.target.value;\r\n            setEvent(newEvent);\r\n        }\r\n        if (e.target.name === 'description') {\r\n            const newEvent = { ...event }\r\n            newEvent.description = e.target.value;\r\n            setEvent(newEvent);\r\n        }\r\n    }\r\n\r\n    const handleAddEvent = () => {\r\n        const newEvent = { ...event };\r\n        fetch('https://damp-beyond-64004.herokuapp.com/addEvent', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newEvent),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n        newEvent.title = \"\";\r\n        setEvent(newEvent);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Form>\r\n                <h3>Add Event</h3>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridTitle\">\r\n                        <Form.Label>Event Title</Form.Label>\r\n                        <Form.Control onBlur={handleBlur} type=\"text\" placeholder=\"Enter Title\" name=\"title\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridDate\">\r\n                        <Form.Label>Event Date</Form.Label><br />\r\n                        <DatePicker selected={startDate} onChange={handleDateChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridDescription\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" onBlur={handleBlur} placeholder=\"Enter Description\" name=\"description\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridImage\">\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Description\" disabled />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <div className=\"text-right\">\r\n                    <a href=\"/admin\">\r\n                        <Button variant=\"primary\" onClick={handleAddEvent}>Submit</Button>\r\n                    </a>\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AddEvent;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\n\r\nconst VolunteerList = (props) => {\r\n    const volunteerList = props.singleVolunteer;\r\n\r\n    const handleDelete = (id) => {\r\n        fetch('https://damp-beyond-64004.herokuapp.com/deleteVolunteer/'+id, {\r\n            method: 'DELETE',\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n    }\r\n    return (\r\n        <tr>\r\n            <td> {volunteerList.fullName} </td>\r\n            <td> {volunteerList.email} </td>\r\n            <td> {volunteerList.date} </td>\r\n            <td> {volunteerList.title} </td>\r\n            <Button onClick={() => handleDelete(volunteerList._id)}>Delete</Button>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default VolunteerList;","import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AddEvent from '../AddEvent/AddEvent';\r\nimport Login from '../Login/Login';\r\nimport VolunteerList from '../VolunteerList/VolunteerList';\r\n\r\nconst Admin = () => {\r\n    const [volunteer, setVolunteer] = useState([]);\r\n    const [adminPanel, setAdminPanel] = useState(true)\r\n    useEffect(() => {\r\n        fetch('https://damp-beyond-64004.herokuapp.com/volunteerlist')\r\n            .then(res => res.json())\r\n            .then(data => setVolunteer(data))\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"col-md-2\">\r\n                    <Link onClick={() => setAdminPanel(true)}>Volunteer list</Link><br />\r\n                    <Link onClick={() => setAdminPanel(false)}>Add Event</Link>\r\n                </Col>\r\n                <Col className=\"col-md-10\">\r\n\r\n                    {\r\n                        adminPanel ? \r\n                        <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Registration Date</th>\r\n                                <th>Volunteer List</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                volunteer.map(singleVolunteer => <VolunteerList singleVolunteer={singleVolunteer}></VolunteerList>)\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    : \r\n                    <AddEvent></AddEvent>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Admin;","import React, { createContext, useState } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Home from './Components/Home/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport VolunteerRegister from './Components/VolunteerRegister/VolunteerRegister';\nimport Login from './Components/Login/Login';\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\nimport EventList from './Components/EventList/EventList';\nimport Admin from './Components/Admin/Admin';\n\nexport const EventContext = createContext();\nexport const UserContext = createContext();\nexport const MatchedItem = createContext();\n\nfunction App() {\n  const [event, setEvent] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState({});\n  const [matchedItem, setMatchItem] = useState({});\n  return (\n    <EventContext.Provider value={[event, setEvent]}>\n      <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n        <MatchedItem.Provider value={[matchedItem, setMatchItem]}>\n        <Router>\n          <Header></Header>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home></Home>\n            </Route>\n\n            <PrivateRoute path=\"/volunteerRegistration\">\n              <VolunteerRegister></VolunteerRegister>\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/eventList\">\n              <EventList></EventList>\n            </PrivateRoute>\n\n            <Route path=\"/login\">\n              <Login></Login>\n            </Route>\n            <Route path=\"/admin\">\n              <Admin></Admin>\n            </Route>\n          </Switch>\n        </Router>\n        </MatchedItem.Provider>\n      </UserContext.Provider>\n    </EventContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}